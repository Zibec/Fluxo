ContextMap ProjetoFluxo {
  type = SYSTEM_LANDSCAPE
}

BoundedContext ContaContext {
  Aggregate Conta {
    Entity Conta {
      - nome : String
      - saldo : Decimal
    }
  }
}

BoundedContext CartaoContext {
  Aggregate Cartao {
    Entity Cartao {
      - limite : Decimal
      - dataFechamentoFatura : Date
      - dataVencimentoFatura : Date
    }
  }

  Aggregate Fatura {
    Entity Fatura {
      - valorTotal : Decimal
      - dataVencimento : Date
      - status : String
    }
  }
}

BoundedContext TransacaoContext {
  Aggregate Transacao {
    Entity Transacao {
      - tipo : String
      - descricao : String
      - valor : Decimal
      - data : Date
      - status : String
    }
  }

  Aggregate Categoria {
    Entity Categoria {
      - nome : String
    }
  }
}

BoundedContext OrcamentoContext {
  Aggregate Orcamento {
    Entity Orcamento {
      - limite : Decimal
      - dataLimite : Date
    }
  }
}

BoundedContext MetaContext {
  Aggregate Meta {
    Entity Meta {
      - tipo : String
      - descricao : String
      - valorAlvo : Decimal
      - prazo : Date
      - saldoAcumulado : Decimal
    }
  }
}

BoundedContext AgendamentoContext {
  Aggregate Agendamento {
    Entity Agendamento {
      - descricao : String
      - valor : Decimal
      - frequencia : String
      - proximaData : Date
    }
  }
}

BoundedContext InvestimentoContext {
  Aggregate Investimento {
    Entity Investimento {
      - descricao : String
      - valorAtual : Decimal
      - tipo : String
    }
  }
}

BoundedContext PerfilContext {
  Aggregate Perfil {
    Entity Perfil {
      - nome : String
      - relacao : String
    }
  }
}

# Relacionamentos
Relationship TransacaoContext.Transacao -> TransacaoContext.Categoria {
  implementationTechnology = "internal"
  description = "afeta categoria"
}

Relationship TransacaoContext.Transacao -> ContaContext.Conta {
  implementationTechnology = "internal"
  description = "afeta saldo da cartao"
}

Relationship TransacaoContext.Transacao -> PerfilContext.Perfil {
  implementationTechnology = "internal"
  description = "realizada por perfil"
}

Relationship CartaoContext.Cartao -> CartaoContext.Fatura {
  type = "GENERATION"
  description = "gera faturas"
}

Relationship CartaoContext.Fatura -> TransacaoContext.Transacao {
  type = "AGGREGATION"
  description = "agrupa despesas"
}

Relationship TransacaoContext.Transacao -> CartaoContext.Fatura {
  type = "USAGE"
  description = "paga fatura"
}

Relationship OrcamentoContext.Orcamento -> TransacaoContext.Categoria {
  type = "USAGE"
  description = "define limite para categoria"
}

Relationship MetaContext.Meta -> ContaContext.Conta {
  type = "USAGE"
  description = "meta vinculada a cartao"
}

Relationship AgendamentoContext.Agendamento -> TransacaoContext.Transacao {
  type = "GENERATION"
  description = "gera transações"
}
